# Name of your workflow
name: NX release

# Rules that trigger the workflow
on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'

permissions:
  actions: write
  contents: write

env:
  # NX release needs to have a GH token in env.GITHUB_TOKEN
  # As during this workflow we will create a new release
  # that should trigger other workflow, we need to create custom TOKEN
  # with proper permissions,
  # more: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  push:
    name: 🔖 Release packages
    runs-on: ubuntu-latest
    steps:
      - name: 🦖 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: 🔻 Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{secrets.PAT}}

      - name: 🏃 Run Node and NPM setup
        uses: ./.github/actions/setup-project

      - name: 💬 Sets the base and head SHAs for the nx affected commands in CI
        uses: nrwl/nx-set-shas@v4

      - name: 🔄 Build affected libs
        run: npx nx affected -t build

      - name: 🔖 Run nx release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          npx nx release --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: 🔐 Update lock file
      #   id: new_lockfile
      #   run: pnpm install --no-frozen-lockfile

      # - name: 📤 Commit new lock file
      #   if: ${{ steps.new_lockfile.outputs.has_changes == 'true' }}
      #   run: |
      #     git config --local user.name "github-actions"
      #     git config --local user.email "github-actions@github.com"
      #     git add pnpm-lock.yaml
      #     git commit -m "chore: update lock file after release"
      #     git push
