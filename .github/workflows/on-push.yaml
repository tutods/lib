# Name of your workflow
name: NX release

# Rules that trigger the workflow
on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: write

env:
  # NX release needs to have a GH token in env.GITHUB_TOKEN
  # As during this workflow we will create a new release
  # that should trigger other workflow, we need to create custom TOKEN
  # with proper permissions,
  # more: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: ü¶ñ Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: üîª Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: üèÉ Run Node and NPM setup
        uses: ./.github/actions/setup-project
    #   - name: Checkout the main branch
    #     uses: actions/checkout@v4
    #     # Only a single commit is fetched by default
    #     # we need full repo history with tags, so we are setting fetch-depth: 0
    #     with:
    #       fetch-depth: 0
    #       # We need to pass Personal Access Token in order
    #       # to force triggering on-publish workflow
    #       token: ${{ secrets.PAT }}

    #   - name: Setup node
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: 20
    #       cache: 'npm'

    #   - name: Install packages
    #     run: npm ci

      - name: Sets the base and head SHAs for the nx affected commands in CI
        uses: nrwl/nx-set-shas@v4

      - name: Build affected libs
        run: npx nx affected -t build

        # We need to set github email and name as nx release will
        # create new tag with version and create new github release
      - name: Run nx release
        run: |
          git config --global user.email "some@user.dev"
          git config --global user.name "YourName"
          npx nx release --skip-publish

      - name: Update lock file
        run: |
          pnpm install --no-frozen-lockfile
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"
          git add pnpm-lock.yaml
          git commit -m "chore: update lock file after release"
          git push
